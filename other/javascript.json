{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print-to-console": {
	"prefix": "say",
	"body": [	"console.log('$1', $0);" ],
	"description": "Log output to console"
	},
	"async-function": {
		"prefix": "afn",
		"body": [
		"const $0 = (async ($1)) => {",
		"})"
		],
		"description": "async function"
  },
	"try": {
		"prefix": "try",
		"body": [
		"try {$0",
		"}",
		"catch (err) {",
		"}"
		],
		"description": "try-catch"
	},
	"catch": {
		"prefix": "catch",
		"body": [	".catch(function(err) {$0})" ],
		"description": "catch"
	},
	"callback": {
		"prefix": "callback",
		"body": [
		"function(error, data) {",
		"  if (error) {$0",
		"  } else {",
		"  }",
		"}"
		],
		"description": "callback function"
	},
	"promise": {
		"prefix": "promise",
		"body": [
		"$1.then(",
		"  function(data) {",
		"  },",
		"  function(error) {",
		"  })"
		],
		"description": "promise"
	},
	"args": {
		"prefix": "args",
		"body": [	"process.argv[$0]" ],
		"description": "node args"
	}
}